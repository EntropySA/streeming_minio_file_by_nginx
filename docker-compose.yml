version: "3.9"

services:
  nginx:
    image: nginx:alpine
    container_name: media-gateway
    ports:
      - "18080:80"
      - "18443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/common_routes.conf:/etc/nginx/conf.d/common_routes.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - minio
    networks:
      - frontend
      - backend
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: backend-api
    ports:
      - "13500:3000"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=change-this-super-secret-jwt-key-in-production
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_USE_SSL=false
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=tasama-recordings
      - MAX_UPLOAD_BYTES=1073741824
    networks:
      - frontend
      - backend
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio-storage
    command: server /data --console-address ":9001"
    ports:
      - "19000:9000"
      - "19091:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-setup:
    image: minio/mc:latest
    container_name: minio-setup
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/tasama-recordings --ignore-existing;
      /usr/bin/mc anonymous set download myminio/tasama-recordings;
      echo 'MinIO bucket created and set to download policy';
      exit 0;
      "
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  minio-data:
    driver: local
